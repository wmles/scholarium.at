# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-26 01:07
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import easy_thumbnails.fields
import userena.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GanzesMenue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bezeichnung', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=30)),
                ('zeit_erstellt', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hauptpunkt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bezeichnung', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=30)),
                ('zeit_erstellt', models.DateTimeField(auto_now_add=True)),
                ('sichtbar_ab', models.IntegerField(blank=True, default=0)),
                ('nummer', models.IntegerField(default=1)),
                ('gehoert_zu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Grundgeruest.GanzesMenue')),
            ],
            options={
                'verbose_name_plural': 'Menü - Hauptpunkte',
            },
        ),
        migrations.CreateModel(
            name='Mitwirkende',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('alt_id', models.PositiveSmallIntegerField(default=0)),
                ('text_de', models.TextField(blank=True, null=True)),
                ('text_en', models.TextField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Rektor'), (2, 'Gründer'), (3, 'Mitarbeiter'), (4, 'Mentor'), (8, 'Student')], default=1)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Mitwirkender',
                'verbose_name_plural': 'Mitwirkende',
                'ordering': ('level', 'start', 'alt_id'),
            },
        ),
        migrations.CreateModel(
            name='ScholariumProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mugshot', easy_thumbnails.fields.ThumbnailerImageField(blank=True, help_text='A personal image displayed in your profile.', upload_to=userena.models.upload_to_mugshot, verbose_name='mugshot')),
                ('privacy', models.CharField(choices=[('open', 'Open'), ('registered', 'Registered'), ('closed', 'Closed')], default='registered', help_text='Designates who can view your profile.', max_length=15, verbose_name='privacy')),
                ('stufe', models.IntegerField(choices=[(0, 'Interessent'), (1, 'Gast'), (2, 'Teilnehmer'), (3, 'Scholar'), (4, 'Partner'), (5, 'Beirat'), (6, 'Patron')], default=0)),
                ('anrede', models.CharField(choices=[('Herr', 'Herr'), ('Frau', 'Frau')], default='Herr', max_length=4, null=True)),
                ('tel', models.CharField(blank=True, max_length=20, null=True)),
                ('firma', models.CharField(blank=True, max_length=30, null=True)),
                ('strasse', models.CharField(blank=True, max_length=30, null=True)),
                ('plz', models.CharField(blank=True, max_length=5, null=True, validators=[django.core.validators.RegexValidator('^[0-9]+$')])),
                ('ort', models.CharField(blank=True, max_length=30, null=True)),
                ('land', django_countries.fields.CountryField(max_length=2, null=True)),
                ('guthaben', models.SmallIntegerField(default=0)),
                ('titel', models.CharField(blank=True, max_length=30, null=True)),
                ('anredename', models.CharField(blank=True, max_length=30, null=True)),
                ('letzte_zahlung', models.DateField(blank=True, null=True)),
                ('datum_ablauf', models.DateField(blank=True, null=True)),
                ('alt_id', models.SmallIntegerField(default=0, editable=False)),
                ('alt_notiz', models.CharField(default='', editable=False, max_length=255, null=True)),
                ('alt_scholien', models.SmallIntegerField(default=0, editable=False, null=True)),
                ('alt_mahnstufe', models.SmallIntegerField(default=0, editable=False, null=True)),
                ('alt_auslaufend', models.SmallIntegerField(default=0, editable=False, null=True)),
                ('alt_gave_credits', models.SmallIntegerField(default=0, editable=False, null=True)),
                ('alt_registration_ip', models.GenericIPAddressField(editable=False, null=True)),
            ],
            options={
                'verbose_name': 'Nutzerprofil',
                'verbose_name_plural': 'Nutzerprofile',
            },
        ),
        migrations.CreateModel(
            name='Unterpunkt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bezeichnung', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=30)),
                ('zeit_erstellt', models.DateTimeField(auto_now_add=True)),
                ('sichtbar_ab', models.IntegerField(blank=True, default=0)),
                ('nummer', models.IntegerField(default=1)),
                ('gehoert_zu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Grundgeruest.Hauptpunkt')),
            ],
            options={
                'verbose_name_plural': 'Menü - Unterpunkte',
            },
        ),
        migrations.CreateModel(
            name='Nutzer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='scholariumprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='my_profile', to=settings.AUTH_USER_MODEL, verbose_name='Benutzer'),
        ),
    ]
